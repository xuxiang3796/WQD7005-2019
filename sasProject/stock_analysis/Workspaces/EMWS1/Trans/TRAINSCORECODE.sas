*------------------------------------------------------------*;
* TRANSFORM: REP_close , log(REP_close + 1);
*------------------------------------------------------------*;
label LOG_REP_close = 'Transformed: Replacement: close';
if REP_close eq . then LOG_REP_close = .;
else do;
if REP_close + 1 > 0 then LOG_REP_close = log(REP_close + 1);
else LOG_REP_close = .;
end;
*------------------------------------------------------------*;
* TRANSFORM: REP_high , log(REP_high + 1);
*------------------------------------------------------------*;
label LOG_REP_high = 'Transformed: Replacement: high';
if REP_high eq . then LOG_REP_high = .;
else do;
if REP_high + 1 > 0 then LOG_REP_high = log(REP_high + 1);
else LOG_REP_high = .;
end;
*------------------------------------------------------------*;
* TRANSFORM: REP_low , log(REP_low + 1);
*------------------------------------------------------------*;
label LOG_REP_low = 'Transformed: Replacement: low';
if REP_low eq . then LOG_REP_low = .;
else do;
if REP_low + 1 > 0 then LOG_REP_low = log(REP_low + 1);
else LOG_REP_low = .;
end;
*------------------------------------------------------------*;
* TRANSFORM: REP_open , log(REP_open + 1);
*------------------------------------------------------------*;
label LOG_REP_open = 'Transformed: Replacement: open';
if REP_open eq . then LOG_REP_open = .;
else do;
if REP_open + 1 > 0 then LOG_REP_open = log(REP_open + 1);
else LOG_REP_open = .;
end;
