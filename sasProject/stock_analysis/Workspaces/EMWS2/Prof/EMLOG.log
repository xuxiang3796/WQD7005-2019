*------------------------------------------------------------*
User:                dante
Date:                May 26, 2019
Time:                20:12:33
Site:                12600285
Platform:            X64_8HOME
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
*------------------------------------------------------------*
* Training Log
Date:                May 26, 2019
Time:                20:12:26
*------------------------------------------------------------*
14715  proc freq data=EMWS2.Prof_VariableSet noprint;
14716  table ROLE*LEVEL/out=WORK.ProfMETA;
14717  run;
 
NOTE: There were 12 observations read from the data set EMWS2.PROF_VARIABLESET.
NOTE: The data set WORK.PROFMETA has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
14718  proc print data=WORK.ProfMETA label noobs;
14719  var ROLE LEVEL COUNT;
14720  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14721  title9 ' ';
14722  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14723  run;
 
NOTE: There were 6 observations read from the data set WORK.PROFMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
14724  title10;
 
14725  %let EMEXCEPTIONSTRING=;
PERFORMANCE  DETAILS
15056  *------------------------------------------------------------*;
15057  * Prof: Generation of macros and macro variables;
15058  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15059  *------------------------------------------------------------*;
 
15060  %let EMEXCEPTIONSTRING=;
15061  *------------------------------------------------------------*;
15062  * TRAIN: Prof;
15063  *------------------------------------------------------------*;
15064  %let EM_ACTION = TRAIN;
15065  %let syscc = 0;
15066  %macro main;
15067     %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
15068         options MPRINT;
15069     %end;
15070
15071     filename temp catalog 'sashelp.emexpl.profile_macros.source';
15072     %include temp;
15073     filename temp;
15074
15075     /* Initialize property macro variables */
15076     %SetProperties;
15077
15078     %if %upcase(&EM_ACTION) = CREATE %then %do;
15079
15080         filename temp catalog 'sashelp.emexpl.profile_create.source';
15081         %include temp;
15082         filename temp;
15083         %create;
15084     %end;
15085     %else
15086     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15087
15088         filename temp catalog 'sashelp.emexpl.profile_train.source';
15089         %include temp;
15090         filename temp;
15091         %train;
15092     %end;
15093  %mend main;
15094
15095  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
15096 +%macro SetProperties;
15097 +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
15098 +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
15099 +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
15100 +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
15101 +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
15102 +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
15103 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
15104 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
15105 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
15106 +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
15107 +%mend SetProperties;
15108 +
15109 +
15110 +%macro makeVarMacros(level= );
15111 +
15112 +    %let numvars = 0;
15113 +    %let where   = '';
15114 +
15115 +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15116 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
15117 +    %else
15118 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
15119 +
15120 +    %if &level = INTERVAL %then %do;
15121 +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
15122 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15123 +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
15124 +    %end;
15125 +    %else %do;
15126 +        %if &level = NOMINAL %then %do;
15127 +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
15128 +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
15129 +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
15130 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
15131 +             %end;
15132 +             %else
15133 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
15134 +
15135 +        %end;
15136 +        %else %do;
15137 +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
15138 +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15139 +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
15140 +        %end;
15141 +    %end;
15142 +
15143 +    %if &numvars>0 %then %do;
15144 +         %let numloop = %sysfunc(ceil(&numvars/10000));
15145 +         %let loopcount = 0;
15146 +
15147 +         %do %while((&numloop - &loopcount) > 0);
15148 +             %let first = %eval((&loopcount*10000) + 1);
15149 +             %let last  = %eval(&first + 10000);
15150 +             %let loopcount = %eval(&loopcount +1);
15151 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
15152 +             filename X catalog "&centry";
15153 +             data _null_;
15154 +                length _STRING_ $80;
15155 +                retain _STRING_ ;
15156 +                file X;
15157 +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
15158 +
15159 +                where &where;
15160 +
15161 +                if _N_=1 then
15162 +                   put '%macro _PROFVAR;';
15163 +
15164 +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
15165 +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
15166 +                   if eof then do;
15167 +                      put _STRING_;
15168 +                      put '%mend _PROFVAR;';
15169 +                   end;
15170 +                end;
15171 +                else do;
15172 +                   put _STRING_;
15173 +                  _string_ = TRIM(NAME);
15174 +                   if eof then do;
15175 +                      put _string_;
15176 +                      put '%mend _PROFVAR;';
15177 +                   end;
15178 +                end;
15179 +             run;
15180 +             filename X;
15181 +         %end;
15182 +    %end;
15183 +
15184 +%mend makeVarMacros;
15185 +
15186 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_TRAIN.SOURCE.
15187 +%macro _looparbor(level=, target=, rules=);
15188 +    %local where;
15189 +
15190 +    %if (&level eq or &target eq ) %then %goto doenda;
15191 +    %if &rules eq %then &rules = _TEMPRULE;
15192 +
15193 +    %let lnumvars = 0;
15194 +    %let where   = '';
15195 +
15196 +    %if &level = INTERVAL %then %do;
15197 +        %let lnumvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
15198 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15199 +             %let lnumvars = %eval(&lnumvars + &EM_NUM_INTERVAL_TARGET);
15200 +    %end;
15201 +    %else %do;
15202 +        %if &level = NOMINAL %then %do;
15203 +            %let lnumvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
15204 +             %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15205 +                 %let lnumvars = %eval(&lnumvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
15206 +        %end;
15207 +        %else %do;
15208 +            %let lnumvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
15209 +            %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15210 +                %let lnumvars = %eval(&lnumvars + &EM_NUM_ORDINAL_TARGET);
15211 +        %end;
15212 +    %end;
15213 +
15214 +    %if &lnumvars>0 %then %do;
15215 +         %let numloop = %sysfunc(ceil(&lnumvars/10000));
15216 +         %let loopcount = 0;
15217 +
15218 +         %do %while((&numloop - &loopcount) > 0);
15219 +             %let loopcount = %eval(&loopcount +1);
15220 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
15221 +             filename X catalog "&centry";
15222 +             %inc X;
15223 +
15224 +             proc arbor data=&EM_NODEID._TMP
15225 +
15226 +             %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
15227 +                 Criterion=GINI Leafsize=5 Mincatsize = 5
15228 +                 Maxbranch=5 Maxdepth=1
15229 +                 NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
15230 +             %end;
15231 +             %else %do;
15232 +                 Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
15233 +                 Maxbranch=5 Maxdepth=&EM_PROPERTY_MAXDEPTH
15234 +                 MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
15235 +             %end;
15236 +
15237 +              MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
15238 +
15239 +                input %_PROFVAR
15240 +
15241 +                    / level = &level;
15242 +                target _SEG / level=binary;
15243 +
15244 +                Performance Disk NodeSize=10000;
15245 +                Assess NoValidata measure=MISC;
15246 +                SUBTREE BEST;
15247 +
15248 +                %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
15249 +                    save IMPORTANCE=_LOOPTEMPRULE;
15250 +                %end;
15251 +                %else %do;
15252 +                    save RULES=_LOOPTEMPRULE;
15253 +                %end;
15254 +             run;
15255 +             quit;
15256 +
15257 +             %if %sysfunc(exist(_LOOPTEMPRULE)) %then %do;
15258 +                 proc append base=&RULES data=_LOOPTEMPRULE force;
15259 +                 run;
15260 +                 proc datasets lib=work nolist mt=(DATA VIEW);
15261 +                    delete _LOOPTEMPRULE;
15262 +                 run;
15263 +                 quit;
15264 +             %end;
15265 +
15266 +
15267 +             filename X;
15268 +         %end;
15269 +     %end;
15270 +
15271 +   %doenda:
15272 +
15273 +%mend _looparbor;
15274 +
15275 +%macro _arbor(target=, rules=, fit=);
15276 +   %local _numnomvars _numordvars _numintvars;
15277 +
15278 +   %if &target eq  %then %goto doendc;
15279 +   %if &rules eq %then &rules = _TEMPRULE;
15280 +   %if &fit   eq %then &fit   = _FIT;
15281 +
15282 +   %let _numintvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
15283 +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15284 +       %let _numintvars = %eval(&_numintvars + &EM_NUM_INTERVAL_TARGET);
15285 +
15286 +
15287 +   %let _numnomvars =  %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
15288 +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15289 +       %let _numnomvars = %eval(&_numnomvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
15290 +
15291 +   %let _numordvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
15292 +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15293 +       %let _numordvars = %eval(&_numordvars + &EM_NUM_ORDINAL_TARGET);
15294 +
15295 +   proc arbor data=&EM_NODEID._TMP
15296 +
15297 +   %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
15298 +      Criterion=GINI Leafsize=5 Mincatsize = 5
15299 +      Maxbranch=5 Maxdepth=1
15300 +      NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
15301 +   %end;
15302 +   %else %do;
15303 +      Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
15304 +      Maxbranch=2 Maxdepth=&EM_PROPERTY_MAXDEPTH
15305 +      MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
15306 +   %end;
15307 +
15308 +      MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
15309 +
15310 +      %if &_numintvars %then %do;
15311 +          input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
15312 +
15313 +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
15314 +              %EM_INTERVAL_TARGET
15315 +          %end;
15316 +
15317 +              / level = interval;
15318 +      %end;
15319 +
15320 +
15321 +      %if &_numnomvars %then %do;
15322 +          input %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED
15323 +
15324 +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
15325 +              %EM_BINARY_TARGET %EM_NOMINAL_TARGET
15326 +          %end;
15327 +
15328 +              / level = nominal;
15329 +      %end;
15330 +
15331 +      %if &_numordvars %then %do;
15332 +         input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED
15333 +
15334 +         %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
15335 +              %EM_ORDINAL_TARGET
15336 +         %end;
15337 +
15338 +             / level = ordinal;
15339 +      %end;
15340 +
15341 +      target _SEG / level=binary;
15342 +
15343 +      Performance Disk NodeSize=10000;
15344 +      Assess
15345 +
15346 +       %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
15347 +          Validata=&EM_NODEID._VALIDTMP
15348 +      %end;
15349 +      %else %do;
15350 +          NoValidata
15351 +      %end;
15352 +
15353 +      measure=MISC;
15354 +      SUBTREE BEST;
15355 +
15356 +      %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
15357 +          SCORE data=&EM_NODEID._TMP  out=_NULL_ outfit=_FIT
15358 +                role=TRAIN;
15359 +          %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
15360 +          SCORE data=&EM_NODEID._VALIDTMP  out=_NULL_ outfit=_FIT2
15361 +                role=VALID;
15362 +          %end;
15363 +
15364 +          save IMPORTANCE=_RULE;
15365 +      %end;
15366 +      %else %do;
15367 +          save RULES=_RULE;
15368 +      %end;
15369 +
15370 +      ;
15371 +   run;
15372 +   quit;
15373 +
15374 +   %if %sysfunc(exist(_RULE)) %then %do;
15375 +       proc append base=&RULES data=_RULE force;
15376 +       run;
15377 +       proc datasets lib=work nolist mt=(DATA VIEW);
15378 +          delete _RULE;
15379 +       run;
15380 +       quit;
15381 +   %end;
15382 +
15383 +   %doendc:
15384 +
15385 +%mend _arbor;
15386 +
15387 +%macro tree_profile(SEGMENT=, _sizeDs=, _varsDs=, _fitDs=, _reportDs=);
15388 +   %put &EM_CODEBAR;
15389 +   %put * Filtering input variables ;
15390 +   %put * SEGMENT= &segment;
15391 +   %put &EM_CODEBAR;
15392 +
15393 +  %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
15394 +  %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
15395 +  %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
15396 +
15397 +  %let _SEGMENT = &SEGMENT;
15398 +
15399 +  proc freq data=&EM_IMPORT_DATA noprint ;
15400 +    table &_segment / missing out=&_segment(keep=&_segment count percent) ;
15401 +
15402 +    %if %EM_FREQ ne %then %do;
15403 +        weight %EM_FREQ;
15404 +        where %EM_FREQ>=0;
15405 +    %end;
15406 +
15407 +  run ;
15408 +  proc sort data=&_segment;
15409 +     by descending count ;
15410 +  run ;
15411 +
15412 +  %let dsid       = %sysfunc(open(&_segment));
15413 +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
15414 +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
15415 +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
15416 +
15417 +  %let dsid=%sysfunc(close(&dsid));
15418 +
15419 +  %let SEGMENTS=;
15420 +  %let COUNTS=;
15421 +  %let OTHERWHERE=;
15422 +  %let numLevels=;
15423 +  data _segs;
15424 +     length SegmentVariable $32 SegmentValue $200;
15425 +     retain SegmentVariable "&_Segment";
15426 +     label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
15427 +           SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))";
15428 +     drop &_segment cum othercount otherpct numLevels;
15429 +     retain cum othercount otherpct numLevels 0;
15430 +     format Count 8.;
15431 +     set &_segment end=eof;
15432 +
15433 +     %if &_segformat ne %then %do;
15434 +         SegmentValue= left(put(&_segment, &_segformat));
15435 +     %end;
15436 +     %else %do;
15437 +        %if &_segtype = N %then %do;
15438 +            SegmentValue= left(put(&_segment, best12.));
15439 +        %end;
15440 +        %else %do;
15441 +            SegmentValue = &_segment;
15442 +        %end;
15443 +     %end;
15444 +
15445 +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
15446 +        call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
15447 +        call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
15448 +        numLevels + 1;
15449 +        output;
15450 +     %end;
15451 +     %else %do;
15452 +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
15453 +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
15454 +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
15455 +            numLevels + 1;
15456 +            output;
15457 +         end;
15458 +         else do;
15459 +            %if &_segtype = C or &_segformat ne %then %do;
15460 +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
15461 +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
15462 +            %end;
15463 +            %else %do;
15464 +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
15465 +            %end;
15466 +            othercount = othercount + count;
15467 +            otherpct   = otherpct + percent;
15468 +            if eof then do;
15469 +               SegmentValue = '_OTHER_';
15470 +               count   = othercount;
15471 +               percent = otherpct;
15472 +               numLevels + 1;
15473 +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
15474 +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
15475 +               output;
15476 +            end;
15477 +         end;
15478 +         cum = cum + percent;
15479 +     %end;
15480 +     if eof then
15481 +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
15482 +  run ;
15483 +
15484 +  title9 " " ;
15485 +  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_frequency_title,  NOQUOTE, &_Segment))";
15486 +  proc print data=_segs noobs label ;
15487 +  run ;
15488 +  title9;
15489 +  title10;
15490 +
15491 +  proc append base=&_sizeDs data=_segs force;
15492 +  run;
15493 +
15494 +  %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED);
15495 +  %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
15496 +      %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED + &EM_NUM_TARGET);
15497 +
15498 +  /* Loop over segments */
15499 +  %do i=1 %to &numLevels;
15500 +     %if ^&numvars %then %do;
15501 +         %if %sysfunc(exist(&_reportDs)) %then %do;
15502 +             data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
15503 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
15504 +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
15505 +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
15506 +                     Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
15507 +                     Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
15508 +                length SegmentVariable $32 SegmentValue $200;
15509 +                retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
15510 +                set &_reportDs;
15511 +                Rank = _N_;
15512 +             run;
15513 +             proc append base=&_varsDs data=_TEMPRULE force;
15514 +             run;
15515 +         %end;
15516 +         %goto doskip;
15517 +     %end;
15518 +
15519 +     %if &_segformat ne %then %do;
15520 +         %if %nrbquote(&&segments&i) = _OTHER_ %then
15521 +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
15522 +         %else
15523 +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&i";
15524 +     %end;
15525 +     %else %do;
15526 +         %if %nrbquote(&&segments&i) = _OTHER_ %then
15527 +                 %let where= &_segment in(&OTHERWHERE);
15528 +         %else %do;
15529 +             %if &_segtype eq N %then
15530 +                 %let where= &_segment = &&segments&i;
15531 +             %else
15532 +                 %let where= &_segment = "&&segments&i";
15533 +         %end;
15534 +     %end;
15535 +
15536 +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
15537 +        set &EM_IMPORT_DATA(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
15538 +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
15539 +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
15540 +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
15541 +        if &where then
15542 +           _seg= 1 ;
15543 +        else
15544 +           _seg= 0 ;
15545 +     run ;
15546 +
15547 +      %if (&EM_IMPORT_VALIDATE ne ) and (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW))) %then %do;
15548 +          data &EM_NODEID._VALIDTMP / view=&EM_NODEID._VALIDTMP ;
15549 +             set &EM_IMPORT_VALIDATE(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
15550 +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
15551 +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
15552 +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
15553 +
15554 +             if &where then
15555 +                _seg= 1 ;
15556 +              else
15557 +                 _seg= 0 ;
15558 +          run ;
15559 +      %end;
15560 +
15561 +     %if  (%eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED + &EM_NUM_INTERVAL_TARGET +
15562 +               &EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_BINARY_TARGET +
15563 +               &EM_NUM_ORDINAL_INPUT  + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_REJECTED  + &EM_NUM_NOMINAL_REJECTED +
15564 +               &EM_NUM_ORDINAL_TARGET +  &EM_NUM_NOMINAL_TARGET) < 10000) %then %do;
15565 +         %_arbor(target=_SEG, rules=_TEMPRULE, FIT=_FIT);
15566 +     %end;
15567 +     %else %do;
15568 +        %_looparbor(level=INTERVAL, target=_SEG, rules=_TEMPRULE);
15569 +        %_looparbor(level=NOMINAL,  target=_SEG, rules=_TEMPRULE);
15570 +        %_looparbor(level=ORDINAL,  target=_SEG, rules=_TEMPRULE);
15571 +     %end;
15572 +
15573 +     /* Keeping the important variables */
15574 +     %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
15575 +         data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
15576 +            length Name $32;
15577 +            label Name = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))";
15578 +            retain Name;
15579 +
15580 +            set _temprule;
15581 +
15582 +            where stat in('VARIABLE','WORTH');
15583 +
15584 +            if stat = 'VARIABLE' then
15585 +               Name = character_value;
15586 +            else
15587 +               output;
15588 +         run;
15589 +
15590 +         proc sort data=_TEMPRULE;
15591 +            by descending Worth;
15592 +         run;
15593 +
15594 +         %if %sysfunc(exist(&_reportDs)) %then %do;
15595 +             data _TEMPRULE;
15596 +                set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT) &_reportDs;
15597 +             run;
15598 +             proc sort data= _TEMPRULE nodupkey;
15599 +                by variable;
15600 +             run;
15601 +             proc sort data=_TEMPRULE;
15602 +                by descending Worth;
15603 +             run;
15604 +         %end;
15605 +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
15606 +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
15607 +                    SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
15608 +                    Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
15609 +                    Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
15610 +                    Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
15611 +            length SegmentVariable $32 SegmentValue $200;
15612 +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
15613 +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
15614 +               set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT);
15615 +            %end;
15616 +            %else %do;
15617 +                set _TEMPRULE;
15618 +            %end;
15619 +            Rank = _N_;
15620 +            if _N_=1 and worth ne . and (worth < &EM_PROPERTY_MINWORTH) then do;
15621 +               put "&EM_CODEBAR";
15622 +               put "* No input variable meet the minimum worth criterion of &EM_PROPERTY_MINWORTH.";
15623 +               put "* You may identify profile variables by lowering this threshold, ";
15624 +               put "* or by increasing the maximum depth of the decision tree used.";
15625 +               put "&EM_CODEBAR";
15626 +            end;
15627 +         run;
15628 +     %end;
15629 +     %else %do;
15630 +         %if %sysfunc(exist(&_reportDs)) %then %do;
15631 +             data _TEMPRULE;
15632 +                set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0)) &_reportDs;
15633 +             run;
15634 +             proc sort data= _TEMPRULE nodupkey;
15635 +                by variable;
15636 +             run;
15637 +             proc sort data=_TEMPRULE;
15638 +                by descending Importance;
15639 +             run;
15640 +         %end;
15641 +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Importance);
15642 +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
15643 +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
15644 +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
15645 +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
15646 +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
15647 +            length SegmentVariable $32 SegmentValue $200;
15648 +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
15649 +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
15650 +               set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0));
15651 +            %end;
15652 +            %else %do;
15653 +                set _TEMPRULE;
15654 +            %end;
15655 +            Rank = _N_;
15656 +         run;
15657 +     %end;
15658 +
15659 +     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_title,  NOQUOTE, &_Segment, &&segments&i, &&counts&i))";
15660 +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth2_title,  NOQUOTE))";
15661 +
15662 +     %if &EM_PROPERTY_PRINTWORTH eq Y %then %do;
15663 +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
15664 +             proc print data=_TEMPRULE noobs label ;
15665 +                var Variable Worth Rank;
15666 +                where worth ne .;
15667 +             run ;
15668 +             data _TEMPRULE;
15669 +                set _TEMPRULE;
15670 +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
15671 +             run;
15672 +         %end;
15673 +         %else %do;
15674 +             proc print data=_TEMPRULE noobs label ;
15675 +                var Variable Importance Rank;
15676 +                where importance ne .;
15677 +             run ;
15678 +         %end;
15679 +
15680 +     %end ;
15681 +
15682 +     title9;
15683 +     title10;
15684 +
15685 +     proc append base=&_varsDs data=_TEMPRULE force;
15686 +     run;
15687 +
15688 +     %if %sysfunc(exist(_FIT)) %then %do;
15689 +         data _FIT;
15690 +            length SegmentVariable $32 SegmentValue $200;
15691 +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&i";
15692 +
15693 +            %if %sysfunc(exist(_FIT2)) %then %do;
15694 +                merge _FIT(keep=_MISC_) _FIT2(keep=_VMISC_);
15695 +            %end;
15696 +            %else %do;
15697 +                set _FIT(keep=_MISC_);
15698 +            %end;
15699 +
15700 +         run;
15701 +         proc append base=&_fitDs data=_FIT force;
15702 +         run;
15703 +     %end;
15704 +
15705 +     %doskip:
15706 +
15707 +     proc datasets lib=work nolist mt=(DATA VIEW);
15708 +        delete _SEGS &EM_NODEID._TMP &EM_NODEID._VALIDTMP _STAT
15709 +
15710 +        %if %sysfunc(exist(_TEMPRULE)) %then %do;
15711 +            _TEMPRULE
15712 +        %end;
15713 +        %if %sysfunc(exist(_FIT))>0 %then %do;
15714 +            _FIT
15715 +        %end;
15716 +        %if %sysfunc(exist(_FIT2))>0 %then %do;
15717 +            _FIT2
15718 +        %end;
15719 +     ;
15720 +     run;
15721 +     quit;
15722 +  %end ;
15723 +%mend tree_profile;
15724 +
15725 +/* This macro loops over segment variables and determines important variables */
15726 +%macro em_profile(_segmentvar= , _sizeDS=WORK._SEGMENTSIZE,
15727 +                  _varsDs=WORK._SELECTEDVARS, _fitDs=WORK._FITSTAT, _reportDs=);
15728 +
15729 +    %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
15730 +    %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
15731 +    %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
15732 +
15733 +    %if _segmentvar eq %then %do;
15734 +        %put &EM_CODEBAR;
15735 +        %put * No segment variable defined ;
15736 +        %put &EM_CODEBAR;
15737 +        %goto doendep;
15738 +    %end;
15739 +
15740 +    %let sndx = 0;
15741 +
15742 +    %let svar = &_segmentvar;
15743 +    %if &svar ne %then %do;
15744 +        %makeVarMacros(LEVEL=INTERVAL);
15745 +        %makeVarMacros(LEVEL=NOMINAL);
15746 +        %makeVarMacros(LEVEL=ORDINAL);
15747 +    %end;
15748 +
15749 +    %do %while(&svar ne );
15750 +        %let sndx= %eval(&sndx+1);
15751 +        %let svar = %scan(&_segmentvar, &sndx,' ');
15752 +        %if &svar ne %then
15753 +            %tree_profile(segment=&svar, _sizeDS=&_sizeDs, _varsDs=&_varsDs, _fitDs=&_fitDs, _reportDs=&_reportDs);
15754 +    %end ;
15755 +
15756 +    proc datasets lib=&EM_LIB nolist;
15757 +       delete &EM_NODEID._MACS(mt=catalog);
15758 +    run;
15759 +
15760 +    %doendep:
15761 +%mend em_profile;
15762 +
15763 +%macro segmentSummary(SEGMENT=, _VARSDS=, FormatFref=);
15764 +   %put &EM_CODEBAR;
15765 +   %put * Summarizing variables ;
15766 +   %put * SEGMENT= &segment;
15767 +   %put &EM_CODEBAR;
15768 +
15769 +  %if (&_varsDs eq ) or ^%sysfunc(exist(&_VARSDS)) or ^%sysfunc(exist(&segment)) %then %goto doends;
15770 +
15771 +  %let _SEGMENT = &SEGMENT;
15772 +
15773 +  %let dsid       = %sysfunc(open(&_segment));
15774 +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
15775 +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
15776 +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
15777 +
15778 +  %let dsid=%sysfunc(close(&dsid));
15779 +
15780 +  %let SEGMENTS=;
15781 +  %let COUNTS=;
15782 +  %let OTHERWHERE=;
15783 +  %let numLevels=;
15784 +  data _null_;
15785 +     retain cum othercount otherpct  numLevels 0;
15786 +     format Count 8.;
15787 +     set &_segment end=eof;
15788 +
15789 +     %if &_segformat ne %then %do;
15790 +         SegmentValue= strip(put(&_segment, &_segformat));
15791 +     %end;
15792 +     %else %do;
15793 +        %if &_segtype = N %then %do;
15794 +            SegmentValue= strip(put(&_segment, best12.));
15795 +        %end;
15796 +        %else %do;
15797 +            SegmentValue = &_segment;
15798 +        %end;
15799 +     %end;
15800 +
15801 +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
15802 +         call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
15803 +         call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
15804 +         numLevels + 1;
15805 +         output;
15806 +     %end;
15807 +     %else %do;
15808 +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
15809 +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
15810 +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
15811 +            numLevels + 1;
15812 +            output;
15813 +         end;
15814 +         else do;
15815 +            %if &_segtype = C or &_segformat ne %then %do;
15816 +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
15817 +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
15818 +            %end;
15819 +            %else %do;
15820 +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
15821 +            %end;
15822 +            othercount = othercount + count;
15823 +            otherpct   = otherpct + percent;
15824 +            if eof then do;
15825 +               SegmentValue = '_OTHER_';
15826 +               count   = othercount;
15827 +               percent = otherpct;
15828 +               numLevels + 1;
15829 +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
15830 +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
15831 +               output;
15832 +            end;
15833 +         end;
15834 +         cum = cum + percent;
15835 +     %end;
15836 +     if eof then
15837 +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
15838 +  run ;
15839 +
15840 +  /* Loop over segments */
15841 +  %do S = 1 %to &numLevels;
15842 +     %if &_segformat ne %then %do;
15843 +         %if %nrbquote(&&segments&s) = _OTHER_ %then
15844 +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
15845 +         %else
15846 +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&s";
15847 +     %end;
15848 +     %else %do;
15849 +         %if %nrbquote(&&segments&s) = _OTHER_ %then
15850 +                 %let where= &_segment in(&OTHERWHERE);
15851 +         %else %do;
15852 +             %if &_segtype eq N %then
15853 +                 %let where= &_segment = &&segments&s;
15854 +             %else
15855 +                 %let where= &_segment = "&&segments&s";
15856 +         %end;
15857 +     %end;
15858 +
15859 +     %let SEGVARS=;
15860 +     %let SEGCLASS=;
15861 +     data _tempStat;
15862 +        set &_varsDs;
15863 +        where  SegmentVariable="&_segment" and SegmentValue="&&segments&s";
15864 +        if Type eq 'I' then
15865 +           call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
15866 +        else
15867 +           call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
15868 +     run ;
15869 +
15870 +     %let _nobs = 0;
15871 +     %let dsid = %sysfunc(open(_tempStat));
15872 +     %if &dsid %then %do;
15873 +         %let _nobs = %sysfunc(attrn(&dsid, NLOBS));
15874 +         %let dsid = %sysfunc(close(&dsid));
15875 +     %end;
15876 +     %if &_nobs<1 %then %goto doskips;
15877 +
15878 +     proc sort data=_tempStat;
15879 +        by Variable;
15880 +     run;
15881 +
15882 +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
15883 +        set &EM_IMPORT_DATA;
15884 +
15885 +        where &where;
15886 +
15887 +        %if (&FormatFref ne ) and (&segvars ne ) %then %do;
15888 +            %inc &FormatFref;
15889 +        %end;
15890 +     run;
15891 +
15892 +     /* Profile Segment */
15893 +     %if &segclass ne %then %do;
15894 +         %class_profile(DATA=&EM_NODEID._TMP, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
15895 +         data _CLASS;
15896 +            length SegmentVariable $32 SegmentValue $200;
15897 +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
15898 +            label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
15899 +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
15900 +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
15901 +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
15902 +            set _CLASS;
15903 +         run;
15904 +         proc append base=&EM_USER_CLASSDIST data=_CLASS force;
15905 +         run;
15906 +         data _tempStat;
15907 +            merge _tempStat _STAT;
15908 +            by VARIABLE;
15909 +         run;
15910 +     %end;
15911 +     %if &segvars ne %then %do;
15912 +         %var_profile(DATA=&EM_NODEID._TMP, OUTPUT=_INTERVAL, VARS=&SEGVARS,
15913 +                           STAT=_STAT, BIN=N, FREQ=%EM_FREQ, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
15914 +         data _INTERVAL;
15915 +             length SegmentVariable $32 SegmentValue $200;
15916 +             retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
15917 +             label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
15918 +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
15919 +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
15920 +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
15921 +             set _INTERVAL;
15922 +         run;
15923 +
15924 +         proc append base=&EM_USER_INTDIST data=_INTERVAL force;
15925 +         run;
15926 +
15927 +         proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
15928 +            by VARIABLE;
15929 +         run;
15930 +         data _tempStat;
15931 +            merge _tempStat _STAT;
15932 +            by VARIABLE;
15933 +         run;
15934 +
15935 +     %end;
15936 +
15937 +     proc sort data=_tempStat;
15938 +        by Rank;
15939 +     run;
15940 +     proc append base=&EM_USER_STATS data=_tempStat force;
15941 +     run;
15942 +
15943 +     %doskips:
15944 +
15945 +     proc datasets lib=work nolist mt=(DATA VIEW);
15946 +        delete _segment &EM_NODEID._TMP _interval _class
15947 +
15948 +        %if %sysfunc(exist(_tempStat))>0 %then %do;
15949 +            _tempStat
15950 +        %end;
15951 +     ;
15952 +     run;
15953 +     quit;
15954 +
15955 +
15956 +  %end ;
15957 +%mend segmentSummary;
15958 +
15959 +%macro train;
15960 +
15961 +   /* Retrieve data set name */
15962 +   %EM_GETNAME(KEY=SIZE,       TYPE=DATA);
15963 +   %EM_GETNAME(KEY=FIT,        TYPE=DATA);
15964 +   %EM_GETNAME(KEY=STATS,      TYPE=DATA);
15965 +   %EM_GETNAME(KEY=WORTH,      TYPE=DATA);
15966 +   %EM_GETNAME(KEY=IMPORTANCE, TYPE=DATA);
15967 +   %EM_GETNAME(KEY=CLASSDIST,  TYPE=DATA);
15968 +   %EM_GETNAME(KEY=INTDIST,    TYPE=DATA);
15969 +   %EM_GETNAME(KEY=SELVARS,    TYPE=DATA);
15970 +
15971 +   /* Delete previous data sets */
15972 +   proc datasets lib=&EM_LIB nolist;
15973 +      delete &EM_NODEID._SIZE  &EM_NODEID._STATS &EM_NODEID._FIT &EM_NODEID._WORTH
15974 +             &EM_NODEID._IMPORTANCE &EM_NODEID._SELVARS
15975 +             &EM_NODEID._CLASSDIST  &EM_NODEID._INTDIST &EM_NODEID._MACS(mt=catalog);
15976 +   run;
15977 +
15978 +   %if (%sysfunc(exist(&EM_IMPORT_DATA))<1 and %sysfunc(exist(&EM_IMPORT_DATA, VIEW))<1)
15979 +       or (&EM_IMPORT_DATA eq ) %then %do;
15980 +       %let  EMEXCEPTIONSTRING = exception.server.emtool.PROFNEEDTRAINDATASET;
15981 +       %goto doendpt;
15982 +   %end;
15983 +
15984 +    proc sort data=&EM_DATA_VARIABLESET;
15985 +       by Name;
15986 +    run;
15987 +
15988 +    %let _segmentvar = %EM_SEGMENT %EM_TREATMENT;
15989 +
15990 +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq SEGMENT) %then
15991 +        %let _segmentvar= &_segmentvar %EM_BINARY_TARGET %EM_NOMINAL_TARGET %EM_ORDINAL_TARGET;
15992 +
15993 +    /* Add report variables */
15994 +    %let REPORT_VARS = ;
15995 +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq REPORT) %then %do;
15996 +        %let REPORT_VARS = %EM_TARGET;
15997 +    %end;
15998 +    %if &EM_PROPERTY_USEREPORTVARS eq Y %then %do;
15999 +        %let REPORT_VARS = &REPORT_VARS %EM_REPORT_VARS;
16000 +    %end;
16001 +
16002 +    %if &REPORT_VARS ne %then %do;
16003 +        data _tempreport;
16004 +           length Variable $32;
16005 +
16006 +        %let rndx= 0 ;
16007 +        %let rvar  = &REPORT_VARS;
16008 +        %do %while( &rndx < &EM_PROPERTY_MAXNUMREPORT and &rvar ne  ) ;
16009 +            %let rndx= %eval(&rndx+1);
16010 +            %let rvar = %scan(&REPORT_VARS, &rndx, ' ') ;
16011 +            %if &rvar ne %then %do;
16012 +                Variable="&rvar"; output;
16013 +            %end ;
16014 +        %end;
16015 +
16016 +        run;
16017 +    %end;
16018 +
16019 +    %em_profile(_segmentvar=&_segmentvar, _sizeDs=&EM_USER_SIZE,
16020 +                _varsDs=&EM_USER_SELVARS, _fitDs=&EM_USER_FIT, _reportDs=_tempReport);
16021 +
16022 +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) and (&REPORT_VARS eq ) %then %goto doendpt;
16023 +
16024 +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) %then %do;
16025 +        data &EM_USER_SELVARS;
16026 +           set _tempreport;
16027 +        run;
16028 +    %end;
16029 +
16030 +    proc sort data=&EM_USER_SELVARS;
16031 +       by Variable;
16032 +    run;
16033 +    data &EM_USER_SELVARS;
16034 +       length Type $1;
16035 +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
16036 +       merge &EM_USER_SELVARS(in=a) &EM_DATA_VARIABLESET(keep=NAME LEVEL LABEL rename=(NAME=Variable));
16037 +       by Variable;
16038 +       if LABEL eq '' then LABEL=VARIABLE;
16039 +       if a then do;
16040 +          if LEVEL = 'INTERVAL' then Type = 'I';
16041 +          else Type = 'C';
16042 +           output;
16043 +       end;
16044 +       drop LEVEL;
16045 +    run;
16046 +
16047 +    proc sort data=&EM_USER_SELVARS out=_SummaryVars nodupkey;
16048 +       by Variable;
16049 +    run;
16050 +    %if &EM_PROPERTY_MAXDEPTH > 1 %then %let selStat = Importance;
16051 +    %else
16052 +        %let selStat = Worth;
16053 +
16054 +   data &EM_USER_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank &selStat);
16055 +       length Type $1;
16056 +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
16057 +       set _SummaryVars;
16058 +       SegmentVariable= "_OVERALL_"; SegmentValue= "&EM_IMPORT_DATA"  ;
16059 +       rank = .; &selStat=.;
16060 +       if Label eq '' then Label=Variable;
16061 +   run;
16062 +
16063 +    /* Profile Entire Data */
16064 +   %put &EM_CODEBAR;
16065 +   %put * Profile Entire Data ;
16066 +   %put &EM_CODEBAR;
16067 +
16068 +    %let segvars=;
16069 +    %let segclass=;
16070 +    data _null_;
16071 +       set  &EM_USER_STATS;
16072 +       if Type = 'I' then
16073 +          call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
16074 +       else
16075 +          call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
16076 +    run ;
16077 +
16078 +    %if &segclass ne %then %do;
16079 +        %class_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
16080 +        data _CLASS;
16081 +           length SegmentVariable $32 SegmentValue $200;
16082 +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
16083 +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16084 +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
16085 +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
16086 +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
16087 +           set _CLASS;
16088 +        run;
16089 +        proc append base=&EM_USER_CLASSDIST data=_CLASS force;
16090 +        run;
16091 +
16092 +        proc sort data=_STAT;
16093 +           by VARIABLE;
16094 +        run;
16095 +        data &EM_USER_STATS;
16096 +            merge  &EM_USER_STATS _STAT;
16097 +            by VARIABLE;
16098 +        run;
16099 +    %end;
16100 +    %if &segvars ne %then %do;
16101 +        /* Computing Min and Max for Interval Variables */
16102 +        %var_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_INTERVAL, VARS=&SEGVARS,
16103 +                          STAT=_STAT, BINDATA=DATA_STAT, FREQ=%EM_FREQ, BIN=Y, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
16104 +        data _INTERVAL;
16105 +           length SegmentVariable $32 SegmentValue $200;
16106 +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
16107 +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16108 +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
16109 +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
16110 +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
16111 +           set _INTERVAL;
16112 +        run;
16113 +
16114 +        proc append base=&EM_USER_INTDIST data=_INTERVAL force;
16115 +        run;
16116 +
16117 +        proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
16118 +           by VARIABLE;
16119 +        run;
16120 +        data &EM_USER_STATS;
16121 +            merge  &EM_USER_STATS _STAT;
16122 +            by VARIABLE;
16123 +        run;
16124 +    %end;
16125 +
16126 +    filename X catalog "&EM_LIB..&EM_NODEID._INTERVAL.FORMAT.source";
16127 +
16128 +    %if %sysfunc(exist(&EM_LIB..&EM_NODEID._INTERVAL, 'CATALOG')) %then %do;
16129 +        proc datasets lib=&EM_LIB nolist;
16130 +           delete &EM_NODEID._INTERVAL(mt=catalog);
16131 +        run;
16132 +    %end;
16133 +
16134 +    %if %sysfunc(exist(DATA_STAT)) %then %do;
16135 +        data _null_;
16136 +           file X;
16137 +
16138 +           %let dsid    =%sysfunc(open(DATA_STAT));
16139 +           %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
16140 +           %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
16141 +           %let obs = %sysfunc(fetch(&dsid));
16142 +
16143 +           put 'format' ;
16144 +
16145 +           %let _count = 0;
16146 +           %let _VARS=;
16147 +           %do %while(&obs=0);
16148 +
16149 +               %let _count = %eval(&_count +1);
16150 +               %let _name = %sysfunc(getvarc(&dsid, &namenum));
16151 +               %let _VARS = &_VARS &_name;
16152 +               %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
16153 +               %do;
16154 +                  put "&_name &_fmtname..";
16155 +               %end;
16156 +               %let obs = %sysfunc(fetch(&dsid));
16157 +           %end;
16158 +           %let dsid=%sysfunc(close(&dsid));
16159 +           put ';';
16160 +        run;
16161 +    %end;
16162 +
16163 +    /* Profile Segments */
16164 +    %if _segmentvar eq %then %goto doendpt;
16165 +    %let sndx = 0;
16166 +
16167 +    %let svar = &_segmentvar;
16168 +    %do %while(&svar ne );
16169 +        %let sndx= %eval(&sndx+1);
16170 +        %let svar = %scan(&_segmentvar, &sndx,' ');
16171 +        %if &svar ne %then
16172 +            %segmentSummary(segment=&svar, _varsDs=&EM_USER_SELVARS, FormatFref=X);
16173 +    %end ;
16174 +
16175 +    filename X;
16176 +
16177 +    %doendpt:
16178 +
16179 +
16180 +    /* Set reports for the node */
16181 +    %let _keys= SIZE STATS CLASSDIST INTDIST;
16182 +
16183 +    %if %sysfunc(exist( &EM_USER_CLASSDIST)) or  %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
16184 +        %if %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
16185 +            data &EM_USER_INTDIST;
16186 +               set &EM_USER_INTDIST;
16187 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16188 +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16189 +                     Color           = "%sysfunc(sasmsg(sashelp.dmine, rpt_color_vlabel,  NOQUOTE))";
16190 +               if SegmentVariable = '_OVERALL_' then Color = 1;
16191 +               else Color = 0;
16192 +            run;
16193 +        %end;
16194 +        %if %sysfunc(exist(&EM_USER_CLASSDIST)) %then %do;
16195 +            data &EM_USER_CLASSDIST;
16196 +               set &EM_USER_CLASSDIST;
16197 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16198 +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16199 +                     Groupindex      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel,  NOQUOTE))";
16200 +               if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
16201 +               else GroupIndex = 1;
16202 +            run;
16203 +        %end;
16204 +
16205 +        %let svar = &_segmentvar;
16206 +        %let sndx = 0;
16207 +        %do %while(&svar ne );
16208 +            %let sndx= %eval(&sndx+1);
16209 +            %let svar = %scan(&_segmentvar, &sndx,' ');
16210 +            %if &svar ne %then %do;
16211 +                %let autodisplay = N;
16212 +                %if &sndx = 1 %then
16213 +                    %let autodisplay = Y;
16214 +                %EM_REPORT(KEY=&_keys, VIEWTYPE=PROFILEVIEW, DESCRIPTION=Profileview, SEGMENTVALUE=&svar,
16215 +                      STATS=STATS, SIZE=SIZE, CLASSDIST=CLASSDIST, INTDIST=INTDIST, AUTODISPLAY=&autodisplay, BLOCK=Plot,
16216 +                      LOCALIZE=Y, COLOR=COLOR);
16217 +            %end;
16218 +        %end ;
16219 +    %end;
16220 +
16221 +    %if %sysfunc(exist( &EM_USER_STATS)) %then %do;
16222 +        %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
16223 +            data &EM_USER_WORTH;
16224 +               set &EM_USER_STATS;
16225 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16226 +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16227 +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16228 +                     Rank   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
16229 +                     Worth  = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
16230 +               where WORTH ne .;
16231 +            run;
16232 +            %EM_REPORT(KEY=WORTH,     VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=WORTH,
16233 +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=WORTH, DESCRIPTION=profworth, BLOCK=Plot,
16234 +                  LOCALIZE=Y, NCOLS=1);
16235 +        %end;
16236 +        %else %do;
16237 +            data &EM_USER_IMPORTANCE;
16238 +               set &EM_USER_STATS;
16239 +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
16240 +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
16241 +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
16242 +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
16243 +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
16244 +               where IMPORTANCE ne .;
16245 +            run;
16246 +            %EM_REPORT(KEY=IMPORTANCE, VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=IMPORTANCE,
16247 +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=IMPORTANCE, DESCRIPTION=profimportance, BLOCK=Plot,
16248 +                  LOCALIZE=Y, NCOLS=1);
16249 +       %end;
16250 +    %end;
16251 +
16252 +    %if %sysfunc(exist( &EM_USER_SIZE)) %then %do;
16253 +        %if %sysfunc(exist( &EM_USER_FIT)) %then %do;
16254 +            data &EM_USER_SIZE;
16255 +               merge &EM_USER_SIZE &EM_USER_FIT;
16256 +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
16257 +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
16258 +               format PERCENT 5.2;
16259 +               format COUNT 12.;
16260 +            run;
16261 +        %end;
16262 +        %else %do;
16263 +            data &EM_USER_SIZE;
16264 +               set &EM_USER_SIZE;
16265 +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
16266 +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
16267 +               format PERCENT 5.2;
16268 +               format COUNT 12.;
16269 +            run;
16270 +        %end;
16271 +
16272 +        %EM_REPORT(KEY=SIZE, VIEWTYPE=PIE, DESCRIPTION=segmentmanysize, X=SEGMENTVALUE, Y=COUNT, TIPTEXT=PERCENT,
16273 +                   REPORTID=SEGMENTVARIABLE, IDVALUE=SIZE, BLOCK=Plot, AUTODISPLAY=Y, LOCALIZE=Y);
16274 +
16275 +    %end;
16276 +
16277 +    %EM_REPORT(KEY=SIZE,      VIEWTYPE=DATA, DESCRIPTION=size,                BLOCK=Stats);
16278 +    %EM_REPORT(KEY=STATS,     VIEWTYPE=DATA, DESCRIPTION=profilevars,         BLOCK=Stats);
16279 +    %EM_REPORT(KEY=CLASSDIST, VIEWTYPE=DATA, DESCRIPTION=clusbarplot,         BLOCK=Stats);
16280 +    %EM_REPORT(KEY=INTDIST,   VIEWTYPE=DATA, DESCRIPTION=clushistplot,        BLOCK=Stats);
16281 +
16282 +    proc datasets lib=&EM_LIB nolist;
16283 +       delete &EM_NODEID._SELVARS _SUMMARYVARS DATA_STAT &EM_NODEID._MACS(mt=catalog) &EM_NODEID._INTERVAL(mt=catalog);
16284 +    run;
16285 +
16286 +%mend train;
16287 +
16288 +
16289 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file EMWS2.PROF_SIZE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_STATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_FIT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_WORTH (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_IMPORTANCE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_SELVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_CLASSDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_INTDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 12 observations read from the data set EMWS2.PROF_VARIABLESET.
NOTE: The data set EMWS2.PROF_VARIABLESET has 12 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X is:
      Catalog Name=EMWS2.PROF_MACS.INTERVAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sun, May 26, 2019 08:12:27 PM,
      Last Modified=Sun, May 26, 2019 08:12:27 PM,
      Filename=C:\Users\dante\Documents\My SAS Files\9.4\stock3\Workspaces\EMWS2\prof_macs.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 23.
NOTE: There were 5 observations read from the data set EMWS2.PROF_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='INTERVAL') and (USE='Y')) or ((ROLE='INPUT') and (LEVEL='INTERVAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: The file X is:
      Catalog Name=EMWS2.PROF_MACS.NOMINAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, May 26, 2019 08:12:27 PM,
      Last Modified=Sun, May 26, 2019 08:12:27 PM,
      Filename=C:\Users\dante\Documents\My SAS Files\9.4\stock3\Workspaces\EMWS2\prof_macs.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 3 records were written to the file X.
      The minimum record length was 10.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set EMWS2.PROF_VARIABLESET.
      WHERE ((ROLE='REJECTED') and LEVEL in ('BINARY', 'NOMINAL') and (USE='Y')) or ((ROLE='INPUT') and LEVEL in ('BINARY', 'NOMINAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
*------------------------------------------------------------*
* Filtering input variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
 
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: The data set WORK._SEGMENT_ has 3 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGMENT_ has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK._SEGS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._SEGS to EMWS2.PROF_SIZE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3 observations read from the data set WORK._SEGS.
NOTE: The data set EMWS2.PROF_SIZE has 3 observations and 4 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
NOTE: 1442447 kilobytes of physical memory.
NOTE: Will use 27816 out of 27816 training cases.
NOTE: Using memory pool with 106675200 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 1849624 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
NOTE: The data set WORK._RULE has 1017 observations and 6 variables.
 
 
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: There were 27816 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
 
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1017 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 1017 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK._RULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._TEMPRULE to EMWS2.PROF_SELVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set EMWS2.PROF_SELVARS has 6 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._SEGS (memtype=DATA).
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
NOTE: 1442242 kilobytes of physical memory.
NOTE: Will use 27816 out of 27816 training cases.
NOTE: Using memory pool with 106675200 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 1849624 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
NOTE: The data set WORK._RULE has 1011 observations and 6 variables.
 
 
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: There were 27816 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
 
 
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1011 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 1011 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK._RULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._TEMPRULE to EMWS2.PROF_SELVARS.
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: 5 observations added.
NOTE: The data set EMWS2.PROF_SELVARS has 11 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
NOTE: 1441832 kilobytes of physical memory.
NOTE: Will use 27816 out of 27816 training cases.
NOTE: Using memory pool with 106675200 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 1849624 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
NOTE: The data set WORK._RULE has 1026 observations and 6 variables.
 
 
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: There were 27816 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
 
 
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1026 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 1026 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK._RULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._TEMPRULE to EMWS2.PROF_SELVARS.
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
NOTE: 2 observations added.
NOTE: The data set EMWS2.PROF_SELVARS has 13 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting EMWS2.PROF_MACS (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS2.PROF_SELVARS.
NOTE: The data set EMWS2.PROF_SELVARS has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: Multiple lengths were specified for the BY variable Variable by input data sets. This might cause unexpected results.
NOTE: There were 13 observations read from the data set EMWS2.PROF_SELVARS.
NOTE: There were 12 observations read from the data set EMWS2.PROF_VARIABLESET.
NOTE: The data set EMWS2.PROF_SELVARS has 13 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS2.PROF_SELVARS.
NOTE: 7 observations with duplicate key values were deleted.
NOTE: The data set WORK._SUMMARYVARS has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._SUMMARYVARS.
NOTE: The data set EMWS2.PROF_STATS has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Profile Entire Data
*------------------------------------------------------------*
 
NOTE: There were 6 observations read from the data set EMWS2.PROF_STATS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sun, May 26, 2019 08:12:28 PM,
      Last Modified=Sun, May 26, 2019 08:12:28 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\macros.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16290 +%macro _vars;
16291 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 27816   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 1008 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
 
NOTE: There were 1008 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 1008 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1008 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 1008 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1008 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1008 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 1008 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS2.PROF_CLASSDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1008 observations read from the data set WORK._CLASS.
NOTE: The data set EMWS2.PROF_CLASSDIST has 1008 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS2.PROF_STATS.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set EMWS2.PROF_STATS has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, May 26, 2019 08:12:28 PM,
      Last Modified=Sun, May 26, 2019 08:12:28 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\macros.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16292 +%macro _vars;
16293 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 27816   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: The data set WORK._STAT has 5 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 5 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
 
NOTE: Records processed = 27816   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: The data set WORK._CLASSOUT has 45 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 45 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 45 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 5 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
 
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: There were 27816 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 6 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK.DATA_STAT has 5 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 5 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 5 observations read from the data set WORK.DATA_STAT.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK.DATA_STAT has 5 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sun, May 26, 2019 08:12:29 PM,
      Last Modified=Sun, May 26, 2019 08:12:29 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\em.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 77 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 34.
NOTE: There were 5 observations read from the data set WORK.DATA_STAT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
16294 +proc format;
16295 +value F1_
16296 +LOW -0.591875 ="0.2984375 "
16297 +0.591875 -1.17875 ="0.8853125 "
16298 +1.17875 -1.765625 ="1.4721875 "
16299 +1.765625 -2.3525 ="2.0590625 "
16300 +2.3525 -2.939375 ="2.6459375 "
16301 +2.939375 -3.52625 ="3.2328125 "
16302 +3.52625 -4.113125 ="3.8196875 "
16303 +4.113125 -4.7 ="4.4065625 "
16304 +4.7 -7.68 ="7.3865625 "
16305 +7.68 -10.66 ="10.3665625 "
16306 +10.66 -13.64 ="13.3465625 "
16307 +13.64 -16.62 ="16.3265625 "
16308 +16.62 -HIGH="19.3065625 "
16309 +;
NOTE: Format F1_ has been output.
16310 +value F2_
16311 +LOW -0.57125 ="0.285625 "
16312 +0.57125 -1.1425 ="0.856875 "
16313 +1.1425 -1.71375 ="1.428125 "
16314 +1.71375 -2.285 ="1.999375 "
16315 +2.285 -2.85625 ="2.570625 "
16316 +2.85625 -3.4275 ="3.141875 "
16317 +3.4275 -3.99875 ="3.713125 "
16318 +3.99875 -4.57 ="4.284375 "
16319 +4.57 -7.58 ="7.294375 "
16320 +7.58 -10.59 ="10.304375 "
16321 +10.59 -13.6 ="13.314375 "
16322 +13.6 -16.61 ="16.324375 "
16323 +16.61 -HIGH="19.334375 "
16324 +;
NOTE: Format F2_ has been output.
16325 +value F3_
16326 +LOW -0.56125 ="0.280625 "
16327 +0.56125 -1.1225 ="0.841875 "
16328 +1.1225 -1.68375 ="1.403125 "
16329 +1.68375 -2.245 ="1.964375 "
16330 +2.245 -2.80625 ="2.525625 "
16331 +2.80625 -3.3675 ="3.086875 "
16332 +3.3675 -3.92875 ="3.648125 "
16333 +3.92875 -4.49 ="4.209375 "
16334 +4.49 -7.48 ="7.199375 "
16335 +7.48 -10.47 ="10.189375 "
16336 +10.47 -13.46 ="13.179375 "
16337 +13.46 -16.45 ="16.169375 "
16338 +16.45 -HIGH="19.159375 "
16339 +;
NOTE: Format F3_ has been output.
16340 +value F4_
16341 +LOW -0.565 ="0.2825 "
16342 +0.565 -1.13 ="0.8475 "
16343 +1.13 -1.695 ="1.4125 "
16344 +1.695 -2.26 ="1.9775 "
16345 +2.26 -2.825 ="2.5425 "
16346 +2.825 -3.39 ="3.1075 "
16347 +3.39 -3.955 ="3.6725 "
16348 +3.955 -4.52 ="4.2375 "
16349 +4.52 -7.512 ="7.2295 "
16350 +7.512 -10.504 ="10.2215 "
16351 +10.504 -13.496 ="13.2135 "
16352 +13.496 -16.488 ="16.2055 "
16353 +16.488 -HIGH="19.1975 "
16354 +;
NOTE: Format F4_ has been output.
16355 +value F5_
16356 +LOW -7181.625 ="3590.8125 "
16357 +7181.625 -14363.25 ="10772.4375 "
16358 +14363.25 -21544.875 ="17954.0625 "
16359 +21544.875 -28726.5 ="25135.6875 "
16360 +28726.5 -35908.125 ="32317.3125 "
16361 +35908.125 -43089.75 ="39498.9375 "
16362 +43089.75 -50271.375 ="46680.5625 "
16363 +50271.375 -57453 ="53862.1875 "
16364 +57453 -116365.2 ="112774.3875 "
16365 +116365.2 -175277.4 ="171686.5875 "
16366 +175277.4 -234189.6 ="230598.7875 "
16367 +234189.6 -293101.8 ="289510.9875 "
16368 +293101.8 -HIGH="348423.1875 "
16369 +;
NOTE: Format F5_ has been output.
16370 +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref FREF has been deassigned.
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: Records processed = 27816   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: There were 27816 observations read from the data set EMWS2.CLUS_TRAIN.
NOTE: There were 27816 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 65 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
 
NOTE: There were 65 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 65 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 65 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 65 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._INTERVAL to EMWS2.PROF_INTDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 65 observations read from the data set WORK._INTERVAL.
NOTE: The data set EMWS2.PROF_INTDIST has 65 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 5 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 5 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS2.PROF_STATS.
NOTE: There were 5 observations read from the data set WORK._STAT.
NOTE: The data set EMWS2.PROF_STATS has 6 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file X is:
      Catalog Name=EMWS2.PROF_INTERVAL.FORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sun, May 26, 2019 08:12:29 PM,
      Last Modified=Sun, May 26, 2019 08:12:29 PM,
      Filename=C:\Users\dante\Documents\My SAS Files\9.4\stock3\Workspaces\EMWS2\prof_interval.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 7 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 10.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Summarizing variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
 
NOTE: There were 3 observations read from the data set WORK._SEGMENT_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS2.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='1');
NOTE: The data set WORK._TEMPSTAT has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file EMWS2.PROF_INTERVAL.FORMAT.SOURCE.
16371 +format
16372 +close F1_.
16373 +high F2_.
16374 +low F3_.
16375 +open F4_.
16376 +vol F5_.
16377 +;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, May 26, 2019 08:12:28 PM,
      Last Modified=Sun, May 26, 2019 08:12:29 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\macros.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16378 +%macro _vars;
16379 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 25862   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 25862 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 25862 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 975 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
 
 
NOTE: There were 975 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 975 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 975 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 975 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 975 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 975 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 975 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS2.PROF_CLASSDIST.
NOTE: There were 975 observations read from the data set WORK._CLASS.
NOTE: 975 observations added.
NOTE: The data set EMWS2.PROF_CLASSDIST has 1983 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, May 26, 2019 08:12:28 PM,
      Last Modified=Sun, May 26, 2019 08:12:30 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\macros.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16380 +%macro _vars;
16381 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 25862   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 25862 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 25862 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 5 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 5 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Records processed = 25862   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: There were 25862 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 25862 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 48 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 48 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 48 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 48 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._INTERVAL to EMWS2.PROF_INTDIST.
NOTE: There were 48 observations read from the data set WORK._INTERVAL.
NOTE: 48 observations added.
NOTE: The data set EMWS2.PROF_INTDIST has 113 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 5 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 5 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 5 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._TEMPSTAT to EMWS2.PROF_STATS.
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: 6 observations added.
NOTE: The data set EMWS2.PROF_STATS has 12 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set EMWS2.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='2');
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file EMWS2.PROF_INTERVAL.FORMAT.SOURCE.
16382 +format
16383 +close F1_.
16384 +high F2_.
16385 +low F3_.
16386 +open F4_.
16387 +vol F5_.
16388 +;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, May 26, 2019 08:12:28 PM,
      Last Modified=Sun, May 26, 2019 08:12:30 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\macros.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16389 +%macro _vars;
16390 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 1142   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1142 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 1142 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 46 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 46 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 46 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 46 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 46 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS2.PROF_CLASSDIST.
NOTE: There were 46 observations read from the data set WORK._CLASS.
NOTE: 46 observations added.
NOTE: The data set EMWS2.PROF_CLASSDIST has 2029 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, May 26, 2019 08:12:28 PM,
      Last Modified=Sun, May 26, 2019 08:12:30 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\macros.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16391 +%macro _vars;
16392 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 1142   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: There were 1142 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 1142 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 1142   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1142 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 1142 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 20 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._INTERVAL to EMWS2.PROF_INTDIST.
NOTE: There were 20 observations read from the data set WORK._INTERVAL.
NOTE: 20 observations added.
NOTE: The data set EMWS2.PROF_INTDIST has 133 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._TEMPSTAT to EMWS2.PROF_STATS.
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: 5 observations added.
NOTE: The data set EMWS2.PROF_STATS has 17 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS2.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='3');
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file EMWS2.PROF_INTERVAL.FORMAT.SOURCE.
16393 +format
16394 +close F1_.
16395 +high F2_.
16396 +low F3_.
16397 +open F4_.
16398 +vol F5_.
16399 +;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, May 26, 2019 08:12:28 PM,
      Last Modified=Sun, May 26, 2019 08:12:30 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\macros.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16400 +%macro _vars;
16401 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: Records processed = 812   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 812 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 812 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 154 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
 
NOTE: There were 154 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 154 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 154 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 154 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 154 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 154 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 154 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._CLASS to EMWS2.PROF_CLASSDIST.
NOTE: There were 154 observations read from the data set WORK._CLASS.
NOTE: 154 observations added.
NOTE: The data set EMWS2.PROF_CLASSDIST has 2183 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sun, May 26, 2019 08:12:28 PM,
      Last Modified=Sun, May 26, 2019 08:12:31 PM,
      Filename=C:\Users\dante\AppData\Local\Temp\SAS Temporary Files\_TD6760_DANTE-PC_\macros.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
16402 +%macro _vars;
16403 +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _MAC has been deassigned.
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 812   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 812 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 812 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Records processed = 812   Memory used = 511K.
NOTE: There were 28401 observations read from the data set AAEM61.DTSTOCK_TRAIN.
NOTE: There were 28401 observations read from the data set EMWS2.IDS3_DATA.
NOTE: There were 27816 observations read from the data set EMWS2.FILTER_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 812 observations read from the data set EMWS2.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 812 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 5 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 5 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Appending WORK._INTERVAL to EMWS2.PROF_INTDIST.
NOTE: There were 5 observations read from the data set WORK._INTERVAL.
NOTE: 5 observations added.
NOTE: The data set EMWS2.PROF_INTDIST has 138 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Appending WORK._TEMPSTAT to EMWS2.PROF_STATS.
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: 2 observations added.
NOTE: The data set EMWS2.PROF_STATS has 19 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: There were 138 observations read from the data set EMWS2.PROF_INTDIST.
NOTE: The data set EMWS2.PROF_INTDIST has 138 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 2183 observations read from the data set EMWS2.PROF_CLASSDIST.
NOTE: The data set EMWS2.PROF_CLASSDIST has 2183 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 13 observations read from the data set EMWS2.PROF_STATS.
      WHERE WORTH not = .;
NOTE: The data set EMWS2.PROF_WORTH has 13 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 3 observations read from the data set EMWS2.PROF_SIZE.
NOTE: The data set EMWS2.PROF_SIZE has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 661 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 661 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 793 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 793 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file EMWS2._SUMMARYVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.DATA_STAT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS2.PROF_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
NOTE: Deleting EMWS2.PROF_SELVARS (memtype=DATA).
NOTE: Deleting EMWS2.PROF_INTERVAL (memtype=CATALOG).
16404  *------------------------------------------------------------*;
16405  * End TRAIN: Prof;
16406  *------------------------------------------------------------*;
16407  *------------------------------------------------------------*;
16408  * Close any missing semi colons;
16409  *------------------------------------------------------------*;
16410  ;
16411  ;
16412  ;
16413  ;
16414  quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16415  *------------------------------------------------------------*;
16416  * Close any unbalanced quotes;
16417  *------------------------------------------------------------*;
16418  /*; *"; *'; */
16419  ;
16420  run;
16421  quit;
16422  /* Reset EM Options */
16423  options formchar="|----|+|---+=|-/\<>*";
16424  options nocenter ls=256 ps=10000;
16425  goptions reset=all device=GIF NODISPLAY;
 
16426  proc sort data=WORK.EM_USER_REPORT;
16427  by ID VIEW;
16428  run;
 
NOTE: There were 925 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16429  proc freq data=EMWS2.Prof_WORTH noprint order=data;
16430  table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
16431  run;
 
NOTE: There were 13 observations read from the data set EMWS2.PROF_WORTH.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
16432  proc freq data=EMWS2.Prof_SIZE noprint order=data;
16433  table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
16434  run;
 
NOTE: There were 3 observations read from the data set EMWS2.PROF_SIZE.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Score Log
Date:                May 26, 2019
Time:                20:12:32
*------------------------------------------------------------*
16536  %let EMEXCEPTIONSTRING=;
16537  *------------------------------------------------------------*;
16538  * SCORE: Prof;
16539  *------------------------------------------------------------*;
16540  %let EM_ACTION = SCORE;
16541  %let syscc = 0;
16542  %macro main;
16543     %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
16544         options MPRINT;
16545     %end;
16546
16547     filename temp catalog 'sashelp.emexpl.profile_macros.source';
16548     %include temp;
16549     filename temp;
16550
16551     /* Initialize property macro variables */
16552     %SetProperties;
16553
16554     %if %upcase(&EM_ACTION) = CREATE %then %do;
16555
16556         filename temp catalog 'sashelp.emexpl.profile_create.source';
16557         %include temp;
16558         filename temp;
16559         %create;
16560     %end;
16561     %else
16562     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16563
16564         filename temp catalog 'sashelp.emexpl.profile_train.source';
16565         %include temp;
16566         filename temp;
16567         %train;
16568     %end;
16569  %mend main;
16570
16571  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
16572 +%macro SetProperties;
16573 +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
16574 +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
16575 +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
16576 +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
16577 +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
16578 +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
16579 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
16580 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
16581 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
16582 +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
16583 +%mend SetProperties;
16584 +
16585 +
16586 +%macro makeVarMacros(level= );
16587 +
16588 +    %let numvars = 0;
16589 +    %let where   = '';
16590 +
16591 +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16592 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
16593 +    %else
16594 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
16595 +
16596 +    %if &level = INTERVAL %then %do;
16597 +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
16598 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16599 +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
16600 +    %end;
16601 +    %else %do;
16602 +        %if &level = NOMINAL %then %do;
16603 +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
16604 +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
16605 +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
16606 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
16607 +             %end;
16608 +             %else
16609 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
16610 +
16611 +        %end;
16612 +        %else %do;
16613 +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
16614 +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16615 +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
16616 +        %end;
16617 +    %end;
16618 +
16619 +    %if &numvars>0 %then %do;
16620 +         %let numloop = %sysfunc(ceil(&numvars/10000));
16621 +         %let loopcount = 0;
16622 +
16623 +         %do %while((&numloop - &loopcount) > 0);
16624 +             %let first = %eval((&loopcount*10000) + 1);
16625 +             %let last  = %eval(&first + 10000);
16626 +             %let loopcount = %eval(&loopcount +1);
16627 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
16628 +             filename X catalog "&centry";
16629 +             data _null_;
16630 +                length _STRING_ $80;
16631 +                retain _STRING_ ;
16632 +                file X;
16633 +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
16634 +
16635 +                where &where;
16636 +
16637 +                if _N_=1 then
16638 +                   put '%macro _PROFVAR;';
16639 +
16640 +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
16641 +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
16642 +                   if eof then do;
16643 +                      put _STRING_;
16644 +                      put '%mend _PROFVAR;';
16645 +                   end;
16646 +                end;
16647 +                else do;
16648 +                   put _STRING_;
16649 +                  _string_ = TRIM(NAME);
16650 +                   if eof then do;
16651 +                      put _string_;
16652 +                      put '%mend _PROFVAR;';
16653 +                   end;
16654 +                end;
16655 +             run;
16656 +             filename X;
16657 +         %end;
16658 +    %end;
16659 +
16660 +%mend makeVarMacros;
16661 +
16662 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
16663  *------------------------------------------------------------*;
16664  * End SCORE: Prof;
16665  *------------------------------------------------------------*;
 
16666  *------------------------------------------------------------*;
16667  * Prof: Scoring DATA data;
16668  *------------------------------------------------------------*;
16669  data EMWS2.Prof_TRAIN
16670  / view=EMWS2.Prof_TRAIN
16671  ;
16672  set EMWS2.Clus_TRAIN
16673  ;
16674  run;
 
NOTE: DATA STEP view saved on file EMWS2.PROF_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
16675  quit;
 
16677  *------------------------------------------------------------*;
16678  * Prof: Computing metadata for TRAIN data;
16679  *------------------------------------------------------------*;
 
NOTE: View EMWS2.PROF_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: View EMWS2.PROF_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                May 26, 2019
Time:                20:12:33
*------------------------------------------------------------*
17040  %let EMEXCEPTIONSTRING=;
17041  *------------------------------------------------------------*;
17042  * REPORT: Prof;
17043  *------------------------------------------------------------*;
17044  %let EM_ACTION = REPORT;
17045  %let syscc = 0;
17046  %macro main;
17047     %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
17048         options MPRINT;
17049     %end;
17050
17051     filename temp catalog 'sashelp.emexpl.profile_macros.source';
17052     %include temp;
17053     filename temp;
17054
17055     /* Initialize property macro variables */
17056     %SetProperties;
17057
17058     %if %upcase(&EM_ACTION) = CREATE %then %do;
17059
17060         filename temp catalog 'sashelp.emexpl.profile_create.source';
17061         %include temp;
17062         filename temp;
17063         %create;
17064     %end;
17065     %else
17066     %if %upcase(&EM_ACTION) = TRAIN %then %do;
17067
17068         filename temp catalog 'sashelp.emexpl.profile_train.source';
17069         %include temp;
17070         filename temp;
17071         %train;
17072     %end;
17073  %mend main;
17074
17075  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
17076 +%macro SetProperties;
17077 +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
17078 +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
17079 +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
17080 +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
17081 +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
17082 +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
17083 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
17084 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
17085 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
17086 +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
17087 +%mend SetProperties;
17088 +
17089 +
17090 +%macro makeVarMacros(level= );
17091 +
17092 +    %let numvars = 0;
17093 +    %let where   = '';
17094 +
17095 +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17096 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
17097 +    %else
17098 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
17099 +
17100 +    %if &level = INTERVAL %then %do;
17101 +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
17102 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17103 +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
17104 +    %end;
17105 +    %else %do;
17106 +        %if &level = NOMINAL %then %do;
17107 +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
17108 +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
17109 +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
17110 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
17111 +             %end;
17112 +             %else
17113 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
17114 +
17115 +        %end;
17116 +        %else %do;
17117 +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
17118 +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
17119 +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
17120 +        %end;
17121 +    %end;
17122 +
17123 +    %if &numvars>0 %then %do;
17124 +         %let numloop = %sysfunc(ceil(&numvars/10000));
17125 +         %let loopcount = 0;
17126 +
17127 +         %do %while((&numloop - &loopcount) > 0);
17128 +             %let first = %eval((&loopcount*10000) + 1);
17129 +             %let last  = %eval(&first + 10000);
17130 +             %let loopcount = %eval(&loopcount +1);
17131 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
17132 +             filename X catalog "&centry";
17133 +             data _null_;
17134 +                length _STRING_ $80;
17135 +                retain _STRING_ ;
17136 +                file X;
17137 +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
17138 +
17139 +                where &where;
17140 +
17141 +                if _N_=1 then
17142 +                   put '%macro _PROFVAR;';
17143 +
17144 +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
17145 +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
17146 +                   if eof then do;
17147 +                      put _STRING_;
17148 +                      put '%mend _PROFVAR;';
17149 +                   end;
17150 +                end;
17151 +                else do;
17152 +                   put _STRING_;
17153 +                  _string_ = TRIM(NAME);
17154 +                   if eof then do;
17155 +                      put _string_;
17156 +                      put '%mend _PROFVAR;';
17157 +                   end;
17158 +                end;
17159 +             run;
17160 +             filename X;
17161 +         %end;
17162 +    %end;
17163 +
17164 +%mend makeVarMacros;
17165 +
17166 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
17167  *------------------------------------------------------------*;
17168  * End REPORT: Prof;
17169  *------------------------------------------------------------*;
 
17170  /* Reset EM Options */
17171  options formchar="|----|+|---+=|-/\<>*";
17172  options nocenter ls=256 ps=10000;
17173  goptions reset=all device=GIF NODISPLAY;
 
